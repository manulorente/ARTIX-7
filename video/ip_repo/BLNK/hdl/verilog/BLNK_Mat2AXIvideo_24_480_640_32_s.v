// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BLNK_Mat2AXIvideo_24_480_640_32_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n,
        img_data_stream_0_V_read,
        img_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n,
        img_data_stream_1_V_read,
        img_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n,
        img_data_stream_2_V_read,
        OutS_TDATA,
        OutS_TVALID,
        OutS_TREADY,
        OutS_TKEEP,
        OutS_TSTRB,
        OutS_TUSER,
        OutS_TLAST,
        OutS_TID,
        OutS_TDEST
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_280 = 10'b1010000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv10_27F = 10'b1001111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] img_data_stream_0_V_dout;
input   img_data_stream_0_V_empty_n;
output   img_data_stream_0_V_read;
input  [7:0] img_data_stream_1_V_dout;
input   img_data_stream_1_V_empty_n;
output   img_data_stream_1_V_read;
input  [7:0] img_data_stream_2_V_dout;
input   img_data_stream_2_V_empty_n;
output   img_data_stream_2_V_read;
output  [23:0] OutS_TDATA;
output   OutS_TVALID;
input   OutS_TREADY;
output  [2:0] OutS_TKEEP;
output  [2:0] OutS_TSTRB;
output  [0:0] OutS_TUSER;
output  [0:0] OutS_TLAST;
output  [0:0] OutS_TID;
output  [0:0] OutS_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_data_stream_0_V_read;
reg img_data_stream_1_V_read;
reg img_data_stream_2_V_read;
reg OutS_TVALID;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [9:0] p_1_reg_148;
wire   [0:0] exitcond1_fu_164_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_60;
wire   [8:0] i_V_fu_170_p2;
reg   [8:0] i_V_reg_225;
wire   [0:0] exitcond2_fu_176_p2;
reg   [0:0] exitcond2_reg_230;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_71;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_85;
reg    ap_sig_ioackin_OutS_TREADY;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [9:0] j_V_fu_182_p2;
wire   [0:0] axi_last_V_fu_188_p2;
reg   [0:0] axi_last_V_reg_239;
reg   [8:0] p_s_reg_137;
reg    ap_sig_bdd_114;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_122;
reg   [0:0] tmp_user_V_fu_86;
reg    ap_reg_ioackin_OutS_TREADY = 1'b0;
reg   [3:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_164_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_OutS_TREADY
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_OutS_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ioackin_OutS_TREADY <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_85 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_logic_1 == OutS_TREADY))) begin
            ap_reg_ioackin_OutS_TREADY <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_164_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_164_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond2_fu_176_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
        p_1_reg_148 <= j_V_fu_182_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_164_p2 == ap_const_lv1_0))) begin
        p_1_reg_148 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        p_s_reg_137 <= i_V_reg_225;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_114)) begin
        p_s_reg_137 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        tmp_user_V_fu_86 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_114)) begin
        tmp_user_V_fu_86 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
        axi_last_V_reg_239 <= axi_last_V_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        exitcond2_reg_230 <= exitcond2_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_225 <= i_V_fu_170_p2;
    end
end

always @ (exitcond2_reg_230 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_reg_ppiten_pp0_it1 or ap_reg_ioackin_OutS_TREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_85 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_logic_0 == ap_reg_ioackin_OutS_TREADY))) begin
        OutS_TVALID = ap_const_logic_1;
    end else begin
        OutS_TVALID = ap_const_logic_0;
    end
end

always @ (ap_done_reg or exitcond1_fu_164_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_164_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (exitcond1_fu_164_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_164_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_71) begin
    if (ap_sig_bdd_71) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_23) begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_60) begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_122) begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

always @ (OutS_TREADY or ap_reg_ioackin_OutS_TREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_OutS_TREADY)) begin
        ap_sig_ioackin_OutS_TREADY = OutS_TREADY;
    end else begin
        ap_sig_ioackin_OutS_TREADY = ap_const_logic_1;
    end
end

always @ (exitcond2_reg_230 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_sig_ioackin_OutS_TREADY or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        img_data_stream_0_V_read = ap_const_logic_0;
    end
end

always @ (exitcond2_reg_230 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_sig_ioackin_OutS_TREADY or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_data_stream_1_V_read = ap_const_logic_1;
    end else begin
        img_data_stream_1_V_read = ap_const_logic_0;
    end
end

always @ (exitcond2_reg_230 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_85 or ap_sig_ioackin_OutS_TREADY or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        img_data_stream_2_V_read = ap_const_logic_1;
    end else begin
        img_data_stream_2_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or exitcond1_fu_164_p2 or exitcond2_fu_176_p2 or exitcond2_reg_230 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_85 or ap_sig_ioackin_OutS_TREADY or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_114) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_114) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond1_fu_164_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_85 | ((exitcond2_reg_230 == ap_const_lv1_0) & (ap_const_logic_0 == ap_sig_ioackin_OutS_TREADY))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond2_fu_176_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign OutS_TDATA = {{{img_data_stream_2_V_dout}, {img_data_stream_1_V_dout}}, {img_data_stream_0_V_dout}};

assign OutS_TDEST = ap_const_lv1_0;

assign OutS_TID = ap_const_lv1_0;

assign OutS_TKEEP = ap_const_lv3_7;

assign OutS_TLAST = axi_last_V_reg_239;

assign OutS_TSTRB = ap_const_lv3_0;

assign OutS_TUSER = tmp_user_V_fu_86;


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_114 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_60 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_71 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (img_data_stream_0_V_empty_n or img_data_stream_1_V_empty_n or img_data_stream_2_V_empty_n or exitcond2_reg_230) begin
    ap_sig_bdd_85 = (((img_data_stream_0_V_empty_n == ap_const_logic_0) & (exitcond2_reg_230 == ap_const_lv1_0)) | ((exitcond2_reg_230 == ap_const_lv1_0) & (img_data_stream_1_V_empty_n == ap_const_logic_0)) | ((exitcond2_reg_230 == ap_const_lv1_0) & (img_data_stream_2_V_empty_n == ap_const_logic_0)));
end

assign axi_last_V_fu_188_p2 = (p_1_reg_148 == ap_const_lv10_27F? 1'b1: 1'b0);

assign exitcond1_fu_164_p2 = (p_s_reg_137 == ap_const_lv9_1E0? 1'b1: 1'b0);

assign exitcond2_fu_176_p2 = (p_1_reg_148 == ap_const_lv10_280? 1'b1: 1'b0);

assign i_V_fu_170_p2 = (p_s_reg_137 + ap_const_lv9_1);

assign j_V_fu_182_p2 = (p_1_reg_148 + ap_const_lv10_1);


endmodule //BLNK_Mat2AXIvideo_24_480_640_32_s

